//145-148 Mealy machine-based Edge detector

library ieee; 
use ieee. std-logic-1164. all ; 
entity edge-detect is 
port ( 
_, _: in std-logic; 
_ : in std-logic ; 
_: out std-logic 
); 
end edge-detect; 

architecture moore_arch of edge_detect is
type state_type is (zero, edge, one);
signal state_reg, state_next: state_type;
begin
  -- state register
process(_,_)
begin
   if (_='1') then
      state_reg <= zero;
   elseif (_'evento and _='1') then
       state_reg <= state_next;
   end if;
 end process;
-- next-state/output logic
process(state_reg,level)
begin
   state_next <= state_reg;
   tick <= '0';
   case state_reg is
   when zero=>
      if level= '1' then
         state_next <= edge;
      end if;
   when edge =>
      tick <= '1';
      if level= '1' then 
         state_next <= one;
      else
         state_next <= zero;
      end if;
  when one =>
     if level= '0' then
        state_next <= zero;
     end if;
end case; 
end process; 
end moore-arch; 
